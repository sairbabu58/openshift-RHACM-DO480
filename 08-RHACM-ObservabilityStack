# Obserbility Configuration and Prerequisite (Grafana Dashboard)

  1) Configure Observability Stack (Default its not enabled)
  2) Monitoring stack
  3) Grafana dashboard
  4) Centralized Dashboard
  5) Installed on Hub Cluster
  6) Require some storage 
  7) Create namespace for Observability Stack (open-cluster-management- observability)
  8) Create a secret (secretname: multiclusterhub-operator-pull-secret in NS: open-cluster-management- observability)
  9) You can extract above secret from (NS: open-cluster-management or openshift-config // secretname: pull-secret)
  10) Follow the RHACM Book Chapter-04 for above configuration
  11) Object storage is require
  12) Disabled Observability Stack (Chapter-04 )
  
  
  
  
Steeps: To install and configure Observability (Grafana Dashboard)
  $ Login to RHACM HUB Cluster
  $ oc create namespace open-cluster-management-observability
  $ DOCKER_CONFIG_JSON=$(oc extract secret/pull-secret  -n openshift-config --to=-)
  $ oc create secret generic  multiclusterhub-operator-pull-secret -n open-cluster-management-observability  --from-literal=.dockerconfigjson="$DOCKER_CONFIG_JSON"  --type=kubernetes.io/dockerconfigjson
  $ oc apply -f obc.yaml (Create Object storage example, Minio ODF, S3)
  $ oc extract configmap/thanos-bc  -n open-cluster-management-observability --to=- (Get the bucket details)
  $ oc extract secret/thanos-bc  -n open-cluster-management-observability --to=-    (Get the secret details)
  $ vi secret.yaml (Create a new secret with above details. Ref RHACM Chapter-04)
  $ oc apply -f secret.yaml
  $ oc apply -f mcobs.yaml (Create the Instance using cli or GUI from RHACM operator. RHACM chapter-04)
  $ oc get po 
  
Validation:
  1) Login to RHACM Dashboard
  2) Overview
  3) Grafana (top right)
  
Disable observability (Grafana Dashboard)
  1) Login to RHACM hub cluster
  $ oc label managedcluster managed-cluster  observability=disabled -n open-cluster-management
  $ oc delete ns open-cluster-management-observability
  
  
# customizing observability

  1) Customizing Grafana dashboard
  2) Prometheus Custom query PROMQL language
  3) Alerts
  4) Alerting rules

# Search the Prometheus query from Grafana dashboard
  > Login to RHACM 
  > Overview
  > Click Grafana 
  > From Grafana dashboard
  > Left Panel Explore
  > add/paste the PROMQL language (Follow the RHACM Chapter-04)
  > Click Instant 
  > Right side top, Run Query 
  










  
